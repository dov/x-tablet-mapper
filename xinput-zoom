#!/usr/bin/python
######################################################################
#  A program for testing the xinput matrix mapping.
#
#  2023-12-02 Sat
#  Dov Grobgeld <dov.grobgeld@gmail.com>
######################################################################

import subprocess
import npeuclid
import math

portrait_aspect_ratio = 0.4  # yscale vs xscale for portrait

def xec(cmd, decode=True, chomp=True, verbose=False):
  '''Run a command a returns its stdout output.

  decode -- run (utf8) decode of the resulting string
  chomp -- get rid of the last newline (like in perl)
  '''
  with subprocess.Popen(cmd,shell=True,stdout=subprocess.PIPE) as ph:
    if verbose:
      sys.stderr.write(cmd + '\n')
    res = b''
    maxsize = 1024
    while True:
      buf = ph.stdout.read()
      if len(buf)==0:
        break
      res += buf
    ph.wait()
  if decode:
    res=res.decode()
  if chomp:
    res = res[:-1]
  return res


import numpy as np

def mat_to_string(m):
  assert(m.shape == (3,3))
  m = m.reshape(1,9)[0,:]
  return ' '.join(f'{v:.4f}' for v in m.tolist())

zoom = 2
m = (npeuclid.Affine2.new_rotate(math.radians(90))
     .scale(1/zoom,1/zoom*portrait_aspect_ratio)
     .pre_translate(1.0,0) # 0.2->1 at zoom=2
#     .pre_translate(1.0,0)  # x:0.4->1 at zoom=1, y:0->0.6 at zoom=2
     ) 
m = np.array(m)
s = mat_to_string(m)  
print(f's = {s}')
xec(f'xinput set-prop "Wacom One by Wacom S Pen stylus" --type=float "Coordinate Transformation Matrix" {s}')

